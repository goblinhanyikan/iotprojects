//Video'da kullandığım kodalar burada.

#include <WiFi.h>
#include <WebServer.h>
#include <IRremote.hpp>

// Wi-Fi Credentials
const char* ssid = "buraya modeminin ismi(evdeki modemin)";
const char* password = "buraya modeminin şifresi";

#define IR_RECEIVE_PIN 23

WebServer server(80);

String lastCode = "IR sinyali gelmedi";
String Protocol = "Protokol yok";    // New: Store protocol name
String Address = "Adres yok";        // Renamed from "Adress" for consistency
String Command = "Komut yok";        // New: Store command value

void handleRoot() {
  String html = "<html><body>";
  html += "<h1>ESP32 IR (can)Alıcı</h1>";
  html += "<p>Protokol: <b>" + Protocol + "</b></p>";
  html += "<p>Adres: <b>" + Address + "</b></p>";
  html += "<p>Komut: <b>" + Command + "</b></p>";
  html += "<p>Ham Veri: <b>" + lastCode + "</b></p>";
  html += "<p><a href='/refresh'>Refresh</a></p>";
  html += "</body></html>";

  server.send(200, "text/html", html);
}

void handleRefresh() {
  if (IrReceiver.decode()) {
    // Update all values from decoded data
    Protocol = String(getProtocolString(IrReceiver.decodedIRData.protocol));
    Address = "0x" + String(IrReceiver.decodedIRData.address, HEX);
    Command = "0x" + String(IrReceiver.decodedIRData.command, HEX);
    lastCode = "0x" + String(IrReceiver.decodedIRData.decodedRawData, HEX);

    // Serial debug output
    Serial.println("Received IR Signal:");
    Serial.println("Protocol: " + Protocol);
    Serial.println("Address: " + Address);
    Serial.println("Command: " + Command);
    Serial.println("Raw Data: " + lastCode);

    IrReceiver.resume();  // Ready for next signal
  }
  
  handleRoot(); // Update webpage
}

void setup() {
  Serial.begin(115200);
  
  // Wi-Fi connection (unchanged)
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.print(".");
  }
  Serial.println("\nConnected! IP: " + WiFi.localIP());

  IrReceiver.begin(IR_RECEIVE_PIN, ENABLE_LED_FEEDBACK);
  
  server.on("/", handleRoot);
  server.on("/refresh", handleRefresh);
  server.begin();
}

void loop() {
  server.handleClient();
}
